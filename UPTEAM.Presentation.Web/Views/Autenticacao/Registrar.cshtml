@model UPTEAM.Models.RegistrarModel
@{
    ViewBag.Title = "Registrar";
    Layout = null;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <title>AdminLTE 2 | Registration Page</title>
    <!-- Tell the browser to be responsive to screen width -->
    @Styles.Render("~/Content/template")
    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
    <script src="https://oss.maxcdn.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
    <!-- Google Font -->
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
</head>
<body class="hold-transition register-page">
    <div class="register-box">
        <div class="register-logo">
            <a href="#"><b>Up</b>Team</a>
        </div>

        <div class="register-box-body">
            <p class="login-box-msg">Registrar Novo Usuário</p>
            @using (Html.BeginForm("Registrar", "Autenticacao", FormMethod.Post, new { @class = "form-signin" }))
            {
                if (!ViewData.ModelState.IsValid)
                {
                    <div class="col-md-12">
                        <div class="alert alert-danger login-validations" role="alert">
                            @Html.ValidationSummary(true, "", new { @class = "validation_summary text-left" })
                        </div>
                    </div>
                }
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Nome, new {htmlAttributes  = new { @class = "form-control", placeholder = "Nome Completo" } })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Login, new { htmlAttributes = new { @class = "form-control", placeholder = "Login" } })
                    <span class="glyphicon glyphicon-user form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Login, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "E-mail"}})
                    <span class="glyphicon glyphicon-envelope form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Telefone, new { htmlAttributes = new { @class = "form-control", placeholder = "Celular" } })
                    <span class="glyphicon glyphicon-phone form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Telefone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.Senha, new { htmlAttributes = new { @class = "form-control", placeholder = "Senha" } })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.Senha, "", new { @class = "text-danger" })
                </div>
                <div class="form-group has-feedback">
                    @Html.EditorFor(model => model.ConfirmacaoSenha, new { htmlAttributes = new { @class = "form-control", placeholder = "Redigite a Senha" } })
                    <span class="glyphicon glyphicon-lock form-control-feedback"></span>
                    @Html.ValidationMessageFor(model => model.ConfirmacaoSenha, "", new { @class = "text-danger" })
                </div>
                <div class="row">
                    <!-- /.col -->
                    <div class="col-xs-4">
                        <button type="submit" class="btn btn-primary btn-block btn-flat">Registrar</button>
                    </div>
                    <!-- /.col -->
                </div>
            }
            @Html.ActionLink("Eu já possuo cadastro no sistema","autenticar", new { }, new { @class="text-center"})
        </div>
        <!-- /.form-box -->
    </div>
    <!-- /.register-box -->
    @Scripts.Render("~/bundles/template")
    <script>
  $(function () {
    $('input').iCheck({
      checkboxClass: 'icheckbox_square-blue',
      radioClass: 'iradio_square-blue',
      increaseArea: '20%' // optional
    });
  });
    </script>
</body>
</html>
